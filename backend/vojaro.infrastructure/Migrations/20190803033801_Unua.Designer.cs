// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vojaro.infrastructure.Data;

namespace vojaro.infrastructure.Migrations
{
    [DbContext(typeof(VojaroDbContext))]
    [Migration("20190803033801_Unua")]
    partial class Unua
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("vojaro.core.Entities.Alumno", b =>
                {
                    b.Property<long>("DNI")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DNI")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Edad");

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<long?>("ModificadoPor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Version");

                    b.HasKey("DNI");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("vojaro.core.Entities.AlumnoAsignatura", b =>
                {
                    b.Property<long?>("AlumnoId");

                    b.Property<long?>("AsignaturaId");

                    b.Property<string>("EstadoAsignatura")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date");

                    b.HasKey("AlumnoId", "AsignaturaId");

                    b.HasIndex("AsignaturaId");

                    b.ToTable("AlumnoAsignatura");
                });

            modelBuilder.Entity("vojaro.core.Entities.Asignatura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("CargaHoraria");

                    b.Property<string>("Codigo")
                        .HasMaxLength(10);

                    b.Property<int>("Cuatrimestre");

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<long?>("ModificadoPor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long?>("PlanCarreraId")
                        .HasColumnName("PlanCarreraID");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("PlanCarreraId");

                    b.ToTable("Asignatura");
                });

            modelBuilder.Entity("vojaro.core.Entities.AsignaturaCorrelativa", b =>
                {
                    b.Property<long>("AsignaturaId");

                    b.Property<long>("CorrelativaId");

                    b.Property<bool>("Aprobada");

                    b.Property<bool>("Regularizada");

                    b.HasKey("AsignaturaId", "CorrelativaId");

                    b.HasIndex("CorrelativaId");

                    b.ToTable("AsignaturaCorrelativa");
                });

            modelBuilder.Entity("vojaro.core.Entities.Carrera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DepartamentoUniversidadId")
                        .HasColumnName("DepartamentoUniversidadID");

                    b.Property<byte>("Duracion")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<long?>("ModificadoPor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte?>("TipoCarreraId")
                        .HasColumnName("TipoCarreraID");

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoUniversidadId");

                    b.HasIndex("TipoCarreraId");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("vojaro.core.Entities.CarreraOrientacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CarreraId")
                        .HasColumnName("CarreraID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("CarreraOrientacion");
                });

            modelBuilder.Entity("vojaro.core.Entities.DepartamentoUniversidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("UniversidadId")
                        .HasColumnName("UniversidadId");

                    b.HasKey("Id");

                    b.HasIndex("UniversidadId");

                    b.ToTable("DepartamentoUniversidad");
                });

            modelBuilder.Entity("vojaro.core.Entities.PlanCarrera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anio");

                    b.Property<long>("CarreraId");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("PlanCarrera");
                });

            modelBuilder.Entity("vojaro.core.Entities.SedeUniversidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long>("UniversidadId")
                        .HasColumnName("UniversidadId");

                    b.HasKey("Id");

                    b.HasIndex("UniversidadId");

                    b.ToTable("SedeUniversidad");
                });

            modelBuilder.Entity("vojaro.core.Entities.TipoCarrera", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("TipoCarrera");
                });

            modelBuilder.Entity("vojaro.core.Entities.Universidad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("FechaCarga")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("date");

                    b.Property<long?>("ModificadoPor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.ToTable("Universidad");
                });

            modelBuilder.Entity("vojaro.core.Entities.AlumnoAsignatura", b =>
                {
                    b.HasOne("vojaro.core.Entities.Alumno", "Alumno")
                        .WithMany("AlumnosAsignaturas")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vojaro.core.Entities.Asignatura", "Asignatura")
                        .WithMany("AlumnosAsignaturas")
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vojaro.core.Entities.Asignatura", b =>
                {
                    b.HasOne("vojaro.core.Entities.PlanCarrera")
                        .WithMany("Asignaturas")
                        .HasForeignKey("PlanCarreraId");
                });

            modelBuilder.Entity("vojaro.core.Entities.AsignaturaCorrelativa", b =>
                {
                    b.HasOne("vojaro.core.Entities.Asignatura", "Asignatura")
                        .WithMany("Correlativas")
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("vojaro.core.Entities.Asignatura", "Correlativa")
                        .WithMany("Dependencias")
                        .HasForeignKey("CorrelativaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("vojaro.core.Entities.Carrera", b =>
                {
                    b.HasOne("vojaro.core.Entities.DepartamentoUniversidad", "DepartamentoUniversidad")
                        .WithMany("Carrera")
                        .HasForeignKey("DepartamentoUniversidadId")
                        .HasConstraintName("FK__Carrera__Departa__4316F928");

                    b.HasOne("vojaro.core.Entities.TipoCarrera", "TipoCarrera")
                        .WithMany("Carrera")
                        .HasForeignKey("TipoCarreraId")
                        .HasConstraintName("FK__Carrera__TipoCar__4222D4EF");
                });

            modelBuilder.Entity("vojaro.core.Entities.CarreraOrientacion", b =>
                {
                    b.HasOne("vojaro.core.Entities.Carrera", "Carrera")
                        .WithMany("Orientaciones")
                        .HasForeignKey("CarreraId")
                        .HasConstraintName("FK__CarreraOr__Carre__48CFD27E");
                });

            modelBuilder.Entity("vojaro.core.Entities.DepartamentoUniversidad", b =>
                {
                    b.HasOne("vojaro.core.Entities.Universidad", "Universidad")
                        .WithMany("Departamentos")
                        .HasForeignKey("UniversidadId")
                        .HasConstraintName("FK__Departame__Unive__3D5E1FD2")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vojaro.core.Entities.PlanCarrera", b =>
                {
                    b.HasOne("vojaro.core.Entities.Carrera", "Carrera")
                        .WithMany("Planes")
                        .HasForeignKey("CarreraId")
                        .HasConstraintName("FK__PlanCarre__Carre__48CFD27E")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("vojaro.core.Entities.SedeUniversidad", b =>
                {
                    b.HasOne("vojaro.core.Entities.Universidad", "Universidad")
                        .WithMany("Sedes")
                        .HasForeignKey("UniversidadId")
                        .HasConstraintName("FK__SedeUnive__Unive__3A81B327")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
